---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
fromImage: builder/src
final: false

git:
  - add: {{ .ModuleDir }}
    to: /src
    includePaths:
      - api
      - images/{{ $.ImageName }}
    stageDependencies:
      install:
        - '**/*'
    excludePaths:
      - images/{{ $.ImageName }}/werf.yaml

shell:
  install:
    - echo "src artifact"

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
<<<<<<< HEAD
fromImage: {{ eq .SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/alt-go-svace" }}
=======
fromImage: builder/golang-alpine
>>>>>>> bf7e024 (Prepare to CSE build (#118))
final: false

import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install

mount:
{{ include "mount points for golang builds" . }}

secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}

shell:
  setup:
    - cd /src/images/{{ $.ImageName }}/cmd
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
<<<<<<< HEAD
    - export GOOS=linux GOARCH=amd64 CGO_ENABLED=0
    - |
      {{- include "image-build.build" (set $ "BuildCommand" (printf `go build -ldflags="-s -w" -tags "%s" -o /%s` .MODULE_EDITION $.ImageName)) | nindent 6 }}
    - chmod +x /{{ $.ImageName }} 
=======
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /{{ $.ImageName }}
    - chmod +x /{{ $.ImageName }}
>>>>>>> bf7e024 (Prepare to CSE build (#118))

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
fromImage: base/distroless

git:
{{- include "image mount points" . }}
import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
    add: /{{ $.ImageName }}
    to: /{{ $.ImageName }}
    before: install
imageSpec:
  config:
    entrypoint: ["/{{ $.ImageName }}"]
